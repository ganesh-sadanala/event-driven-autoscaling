version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: keda_user
      POSTGRES_PASSWORD: keda_pass
      POSTGRES_DB: postgres  # Default database
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - kedanetwork
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keda_user" ]
      interval: 10s
      timeout: 5s
      retries: 3

  service-registry:
    image: service-registry
    container_name: service-registry
    depends_on:
      - postgres
    networks:
      - kedanetwork

  users-service:
    image: user-service
    container_name: user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kedauserdb
      SPRING_DATASOURCE_USERNAME: keda_user
      SPRING_DATASOURCE_PASSWORD: keda_pass
    depends_on:
      - postgres
      - service-registry
    networks:
      - kedanetwork

  products-service:
    image: product-service
    container_name: product-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kedaproductdb
      SPRING_DATASOURCE_USERNAME: keda_user
      SPRING_DATASOURCE_PASSWORD: keda_pass
    depends_on:
      - postgres
      - service-registry
    networks:
      - kedanetwork

networks:
  kedanetwork:
    driver: bridge

volumes:
  postgres-data:
